This section explains how to configure Tomcat to use log4j rather than java.util.logging for all Tomcat's internal logging. 
The following steps describe configuring log4j to output Tomcat's internal logging.

The terms CATALINA_BASE, TOMCAT_HOME,CATALINA_BASE, CATALINA_HOME are same in our system.

Create a file called log4j.properties with the following content and save it into
 $CATALINA_BASE/lib ($TOMCAT_HOME/lib). (Each section should be changed according to the actual requirement)

 log4j.rootLogger=INFO, CATALINA

# Define all the appenders
log4j.appender.CATALINA=org.apache.log4j.DailyRollingFileAppender
log4j.appender.CATALINA.File=${catalina.base}/logs/catalina.
log4j.appender.CATALINA.Append=true
log4j.appender.CATALINA.Encoding=UTF-8
# Roll-over the log once per day
log4j.appender.CATALINA.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.CATALINA.layout = org.apache.log4j.PatternLayout
log4j.appender.CATALINA.layout.ConversionPattern = %d [%t] %-5p %c- %m%n

log4j.appender.LOCALHOST=org.apache.log4j.DailyRollingFileAppender
log4j.appender.LOCALHOST.File=${catalina.base}/logs/localhost.
log4j.appender.LOCALHOST.Append=true
log4j.appender.LOCALHOST.Encoding=UTF-8
log4j.appender.LOCALHOST.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.LOCALHOST.layout = org.apache.log4j.PatternLayout
log4j.appender.LOCALHOST.layout.ConversionPattern = %d [%t] %-5p %c- %m%n

log4j.appender.MANAGER=org.apache.log4j.DailyRollingFileAppender
log4j.appender.MANAGER.File=${catalina.base}/logs/manager.
log4j.appender.MANAGER.Append=true
log4j.appender.MANAGER.Encoding=UTF-8
log4j.appender.MANAGER.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.MANAGER.layout = org.apache.log4j.PatternLayout
log4j.appender.MANAGER.layout.ConversionPattern = %d [%t] %-5p %c- %m%n

log4j.appender.HOST-MANAGER=org.apache.log4j.DailyRollingFileAppender
log4j.appender.HOST-MANAGER.File=${catalina.base}/logs/host-manager.
log4j.appender.HOST-MANAGER.Append=true
log4j.appender.HOST-MANAGER.Encoding=UTF-8
log4j.appender.HOST-MANAGER.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.HOST-MANAGER.layout = org.apache.log4j.PatternLayout
log4j.appender.HOST-MANAGER.layout.ConversionPattern = %d [%t] %-5p %c- %m%n

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Encoding=UTF-8
log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern = %d [%t] %-5p %c- %m%n

# Configure which loggers log to which appenders
log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost]=INFO, LOCALHOST
log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/manager]=INFO, MANAGER
log4j.logger.org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager]=INFO, HOST-MANAGER


    1.Download Log4J (Tomcat requires v1.2.x).

    2.Download or build tomcat-juli.jar and tomcat-juli-adapters.jar that are available as an "extras" component for Tomcat. See Additional Components documentation for details.

    3.This tomcat-juli.jar differs from the default one. It contains the full Apache Commons Logging implementation and thus is able to discover the presense of log4j and configure itself.

    4.If you want to configure Tomcat to use log4j globally:
        Put log4j.jar and tomcat-juli-adapters.jar from "extras" into $CATALINA_HOME/lib.
        Replace $CATALINA_HOME/bin/tomcat-juli.jar with tomcat-juli.jar from "extras".

    5.If you are running Tomcat with separate $CATALINA_HOME and $CATALINA_BASE and want to configure to use log4j in a single $CATALINA_BASE only:
        Create $CATALINA_BASE/bin and $CATALINA_BASE/lib directories if they do not exist.
        Put log4j.jar and tomcat-juli-adapters.jar from "extras" into $CATALINA_BASE/lib
        Put tomcat-juli.jar from "extras" as $CATALINA_BASE/bin/tomcat-juli.jar
        If you are running with a security manager, you would need to edit the $CATALINA_BASE/conf/catalina.policy file to adjust it to using a different copy of tomcat-juli.jar.
        The old tomcat-juli.jar in $CATALINA_HOME/bin is still referenced by manifest of bootstrap.jar and thus will be implicitly present on Tomcat's classpath.
        The startup scripts configure$CATALINA_BASE/bin/tomcat-juli.jar to be earlier on the classpath than bootstrap.jar, and so it should have higher priority. 
        Thus it should be OK, but consider removing the unneeded copy oftomcat-juli.jar (copy it into all other $CATALINA_BASEs that do not use log4j). 
        Tomcat 7 does not have this issue.

    6.Delete $CATALINA_BASE/conf/logging.properties to prevent java.util.logging generating zero length log files.

    7.Start Tomcat
    
This log4j configuration mirrors the default java.util.logging setup that ships with Tomcat: 
both the manager and host-manager apps get an individual log file, 
and everything else goes to the "catalina.log" log file. Each file is rolled-over once per day.

You can (and should) be more picky about which packages to include in the logging. 
Tomcat defines loggers by Engine and Host names. For example, for a more detailed Catalina localhost log, 
add this to the end of the log4j.properties above. 
Note that there are known issues with using this naming convention (with square brackets) in log4j XML based configuration files,
so we recommend you use a properties file as described until a future version of log4j allows this convention.


